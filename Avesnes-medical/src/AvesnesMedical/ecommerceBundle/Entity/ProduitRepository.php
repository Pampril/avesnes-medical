<?php

namespace AvesnesMedical\ecommerceBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;


/**
 * ProduitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitRepository extends EntityRepository
{
    // On ajoute 2 arguments : le nombre d'article par page, ainsi que la page courante
    public function getProduits($nombreParPage, $page)
    {
        // On déplace la vérification du numéro de page dans cette méthode
        if ($page < 1)
        {
            throw new \InvalidArgumentException('L\'argument $page ne peut être inférieur à 1 (valeur : "'.$page.'").');
        }
        // La construction de la requête reste inchangée
        $query = $this->createQueryBuilder('p')
            ->leftJoin('p.categorie', 'cat')
            ->addSelect('cat')
            ->getQuery();
        // On définit l'article à partir duquel commencer la liste
        $query->setFirstResult(($page-1) * $nombreParPage)
        // Ainsi que le nombre d'articles à afficher
                    ->setMaxResults($nombreParPage);
        // Enfin, on retourne l'objet Paginator correspondant à la requête construite
        // (n'oubliez pas le use correspondant en début de fichier)
        return new Paginator($query);
    }

    public function getProduitsAvecCategorie($id_categories, $nombreParPage, $page)
    {
        $query = $this->createQueryBuilder('p');
        // On fait une jointure avec l'entité Categorie, avec pour alias « c »
        $query  ->join('p.categorie', 'c')
                ->where($query->expr()->in('c.id', $id_categories)) // Puis on filtre sur l'id des catégories à l'aide d'un IN
                ->getQuery()->getResult();

        $query->setFirstResult(($page-1) * $nombreParPage)
        // Ainsi que le nombre d'articles à afficher
            ->setMaxResults($nombreParPage);
        // Enfin, on retourne l'objet Paginator correspondant à la requête construite
        // (n'oubliez pas le use correspondant en début de fichier)
        return new Paginator($query);
    }
}
